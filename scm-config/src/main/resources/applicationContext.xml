<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/mvc 
	   http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
       http://www.springframework.org/schema/context 
	   http://www.springframework.org/schema/context/spring-context-4.0.xsd
	   http://www.springframework.org/schema/aop 
	   http://www.springframework.org/schema/aop/spring-aop.xsd">

	

	
		<!-- DATA SOURCE LOGGING ke MYSQL -->
	<bean id="dataSourceLogging" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${database.driverClass}"
		p:url="${database.url}" p:username="${database.username}"
		p:password="${database.password}" p:maxWait="40000" p:maxActive="80"
		p:maxIdle="20" />

	<!-- Definition for loggingJdbcDaoImpl bean -->
	<bean id="loggingJdbcDaoImpl"
		class="com.scm.locking.LoggingJdbcDaoImpl">
		<property name="dataSource" ref="dataSourceLogging" />
	</bean>

	<bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate">
		<property name="baselineOnMigrate" value="true" />
		<property name="locations" value="classpath:/db/migration" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<mvc:annotation-driven
		content-negotiation-manager="contentNegotiationManager" />
	<context:component-scan base-package="com.scm.*">
	</context:component-scan>

	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">

		<property name="favorPathExtension" value="false" />
	</bean>
	<context:component-scan base-package="com.scm" />

	<!-- <mvc:annotation-driven /> -->
	<bean
		class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" />

	<!-- DataSource -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${database.driverClass}" />
		<property name="jdbcUrl" value="${database.url}" />
		<property name="user" value="${database.username}" />
		<property name="password" value="${database.password}" />

		<property name="acquireIncrement" value="${connection.acquireIncrement}" />
		<property name="minPoolSize" value="${connection.minPoolSize}" />
		<property name="maxPoolSize" value="${connection.maxPoolSize}" />
		<property name="maxIdleTime" value="${connection.maxIdleTime}" />
	</bean>

	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
			</props>
		</property>
		<property name="entityInterceptor">
			<ref bean="myInterceptor" />
		</property>
		<property name="packagesToScan" value="com.scm.entities"></property>
		<qualifier value="bisnis" />
	</bean>

	<!-- Transaction -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
		<qualifier value="bisnis" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="myInterceptor" class="com.scm.locking.HibernateInterceptor" />


	<!-- DataSource -->
	<bean id="dataSaourceLogging" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${database.logging.driverClass}" />
		<property name="jdbcUrl" value="${database.logging.url}" />
		<property name="user" value="${database.logging.username}" />
		<property name="password" value="${database.logging.password}" />

		<property name="acquireIncrement" value="${connection.acquireIncrement}" />
		<property name="minPoolSize" value="${connection.minPoolSize}" />
		<property name="maxPoolSize" value="${connection.maxPoolSize}" />
		<property name="maxIdleTime" value="${connection.maxIdleTime}" />
	</bean>

	<!-- Hibernate sessionFactoryLog -->
	<bean id="sessionFactoryLog"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSaourceLogging"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.logging.dialect">${hibernate.logging.dialect}</prop>
				<prop key="hibernate.logging.hbm2ddl.auto">${hibernate.logging.hbm2ddl.auto}</prop>
				<prop key="hibernate.logging.format_sql">${hibernate.logging.format_sql}</prop>
				<prop key="hibernate.logging.show_sql">${hibernate.logging.show_sql}</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.scm.entitiesAuditLog"></property>
		<qualifier value="log" />
	</bean>

	<!-- Transaction -->
	<bean id="transactionManagerLog"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactoryLog" />
		<qualifier value="log" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManagerLog" />


	<!-- enable aop -->
	<aop:aspectj-autoproxy />
	<bean id="loggingAdvise" class="com.scm.conf.LoggingAdvise" />
	
	<bean
		class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.${spring.profiles.default}.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>


</beans>